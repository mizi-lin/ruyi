const p=function(){const o=typeof document<"u"&&document.createElement("link").relList;return o&&o.supports&&o.supports("modulepreload")?"modulepreload":"preload"}(),h=function(n){return"/"+n},u={},a=function(o,l,E){let c=Promise.resolve();if(l&&l.length>0){document.getElementsByTagName("link");const e=document.querySelector("meta[property=csp-nonce]"),s=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));c=Promise.all(l.map(t=>{if(t=h(t),t in u)return;u[t]=!0;const i=t.endsWith(".css"),d=i?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${d}`))return;const r=document.createElement("link");if(r.rel=i?"stylesheet":p,i||(r.as="script",r.crossOrigin=""),r.href=t,s&&r.setAttribute("nonce",s),document.head.appendChild(r),i)return new Promise((m,f)=>{r.addEventListener("load",m),r.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${t}`)))})}))}return c.then(()=>o()).catch(e=>{const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=e,window.dispatchEvent(s),!s.defaultPrevented)throw e})};Promise.all([a(()=>import("../../../assets/js/root.EXT592vQ.js"),[]),a(()=>import("../../../assets/js/app.B6kIzwT5.js").then(n=>n.al),[])]).then(([{render:n},{App:o}])=>n(o));export{a as _};
